{"ast":null,"code":"var _jsxFileName = \"/Users/damiank/code/anagramida/src/Game.jsx\";\nimport GameBoard from \"./GameBoard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst generateLines = () => {\n  const numberOfRows = 9;\n  let rows = new Array();\n\n  for (var i = 0; i < numberOfRows; i++) {\n    const column = Math.floor(Math.random() * 10) + 1;\n    rows.push({\n      column: 1\n    });\n  }\n\n  return rows; // return [{}, { column: 1 }, {}];\n};\n\nexport default function Game() {\n  return /*#__PURE__*/_jsxDEV(GameBoard, {\n    word: \"anagramida\",\n    lines: generateLines()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this) // <GameBoard word=\"anagramida\" lines={[\n  //     {},\n  //     { column: 1 },\n  //     { column: 2 },\n  //     { column: 3 },\n  //     { column: 4 },\n  //     {}\n  // ]} />\n  ;\n}\n_c = Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/damiank/code/anagramida/src/Game.jsx"],"names":["GameBoard","generateLines","numberOfRows","rows","Array","i","column","Math","floor","random","push","Game"],"mappings":";AAAA,OAAOA,SAAP,MAAsB,aAAtB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAExB,QAAMC,YAAY,GAAG,CAArB;AAEA,MAAIC,IAAI,GAAG,IAAIC,KAAJ,EAAX;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,YAApB,EAAkCG,CAAC,EAAnC,EAAuC;AACnC,UAAMC,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,EAA3B,IAAiC,CAAhD;AACAN,IAAAA,IAAI,CAACO,IAAL,CAAU;AAAEJ,MAAAA,MAAM,EAAE;AAAV,KAAV;AACH;;AACD,SAAOH,IAAP,CATwB,CAUxB;AACH,CAXD;;AAcA,eAAe,SAASQ,IAAT,GAAgB;AAC3B,sBACI,QAAC,SAAD;AAAW,IAAA,IAAI,EAAC,YAAhB;AAA6B,IAAA,KAAK,EAAEV,aAAa;AAAjD;AAAA;AAAA;AAAA;AAAA,UADJ,CAEI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATJ;AAWH;KAZuBU,I","sourcesContent":["import GameBoard from \"./GameBoard\";\n\nconst generateLines = () => {\n\n    const numberOfRows = 9;\n\n    let rows = new Array();\n    for (var i = 0; i < numberOfRows; i++) {\n        const column = Math.floor(Math.random() * 10) + 1;\n        rows.push({ column: 1 });\n    }\n    return rows;\n    // return [{}, { column: 1 }, {}];\n};\n\n\nexport default function Game() {\n    return (\n        <GameBoard word=\"anagramida\" lines={generateLines()} />\n        // <GameBoard word=\"anagramida\" lines={[\n        //     {},\n        //     { column: 1 },\n        //     { column: 2 },\n        //     { column: 3 },\n        //     { column: 4 },\n        //     {}\n        // ]} />\n    );\n}"]},"metadata":{},"sourceType":"module"}